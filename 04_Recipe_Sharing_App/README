To make use of AWS Certificate Manager (ACM) for SSL/TLS certificates in your AWS infrastructure, must use the same region for creating the certificate and deploying the solution.

### Pre-requisites:
- You must have a domain name registered with a domain registrar. This can be done through AWS Route 53 or any other registrar.
- You must have a hosted zone created in AWS Route 53 for your domain. This is necessary for managing DNS records and validating the certificate.
- Make note of the name servers provided by AWS Route 53 when creating a hosted zone for your domain. This is important for setting up the DNS records correctly.
Example:
```
Nameservers:
ns-167.awsdns-20.com.
ns-1815.awsdns-34.co.uk.
ns-690.awsdns-22.net.
ns-1511.awsdns-60.org.
```
- After issuing the certificate, you will need to take note of Certificate ARN. This is a unique identifier for the certificate and will be used in the CloudFormation stack.

### How to request a certificate in ACM:
<img src="readme-files/Cert-Manager-Config.png" alt="ACM Config" width="600"/>

After requesting the certificate, you will see it listed with the pending validation status. To validate 
the certificate and prove domain ownership, you need to create a DNS record in your hosted zone.
### How to validate the certificate in ACM:
 If your domain is managed by Route 53, you can click Create Records in Route 53 for an easier setup.
<img src="readme-files/Create-Rec-in-Route53.png" alt="Create Record in Route 53" width="600"/>
<img src="readme-files/Create-Rec-in-Route53-p2.png" alt="Create Record in Route 53" width="600"/>

Your certificate will be validated once the DNS record is created and propagated. This may take a few minutes.  
<img src="readme-files/Create-Rec-in-Route53-p3.png" alt="Create Record in Route 53" width="600"/>

The last step is take note of the ARN of the certificate. You will need it as a parameter for the CloudFormation stack.

### Resources created by the CloudFormation stack:
**Frontend:**
- CloudFront
- S3  

**Backend:**
- 1 VPC
- 2 public subnets
- 2 private subnets
- 1 private EC2 instance
- 1 ALB
- 1 NAT gateway
- EC2 instance role with minimum permissions to interact with DynamoDB recipes table  

**Database:**
- DynamoDB

### Deployment Steps
Make sure you choose the same region for creating the certificate and deploying the solution.

**CloudFormation Template Stack Details Example:**  
<img src="readme-files/CFN-Stack-Details.png" alt="CloudFormation Stack Details" width="600"/>

1. **Create the CloudFormation Stack**
   Use the following command to create the stack:
   ```sh
   aws cloudformation create-stack --stack-name my-stack --template-body file://CFN-Template.yaml --region <your-region> --capabilities CAPABILITY_IAM
   ```

2. **Check the Status of the Stack**
   Use the following command to check the status of the stack:
   ```sh
   aws cloudformation describe-stacks --stack-name my-stack --region <your-region>
   ```

3. **Access the Website URL**
   Once the stack is created successfully, you can access the website using the DNS address of the EC2 instance in the output section of the stack.
   ```
   aws cloudformation describe-stacks --stack-name my-stack --query "Stacks[0].Outputs[?OutputKey=='WebsiteURL'].OutputValue" --output text | cat
   ```

4. **Update the Stack**
   To update the stack, use the following command:
   ```sh
   aws cloudformation update-stack --stack-name my-stack --template-body file://CFN-Template.yaml --region <your-region> --capabilities CAPABILITY_IAM
   ```

5. **Delete the Stack**
   To delete the stack, use the following command:
   ```sh
   aws cloudformation delete-stack --stack-name my-stack --region <your-region>
   ```

#--------------------------------------------#  
Nameservers:
```
ns-167.awsdns-20.com.
ns-1815.awsdns-34.co.uk.
ns-690.awsdns-22.net.
ns-1511.awsdns-60.org.
```
Cert ARN:
```
arn:aws:acm:eu-central-1:593793041840:certificate/64c5fa7a-1bc4-4f1f-aec6-7b3be1924b60
```